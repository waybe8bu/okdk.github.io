<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on okie dokie</title>
    <link>/posts/</link>
    <description>Recent content in Posts on okie dokie</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TrinityCore 如何处理怪物 Engage 玩家：CreatureAI::MoveInLineOfSight的调用链路</title>
      <link>/posts/trinitycore-335-engage-moveinlineofsight/</link>
      <pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/posts/trinitycore-335-engage-moveinlineofsight/</guid>
      <description>&lt;p&gt;指出CreatureAI::MoveInLineOfSight的调用链路&lt;/p&gt;&#xA;&lt;p&gt;我来帮你分析&lt;code&gt;CreatureAI::MoveInLineOfSight&lt;/code&gt;的调用链路。让我搜索相关的调用代码。 现在让我查看Grid通知机制，这是&lt;code&gt;MoveInLineOfSight&lt;/code&gt;被调用的关键地方： 现在让我查看&lt;code&gt;CreatureUnitRelocationWorker&lt;/code&gt;函数： 现在让我查看这些Grid通知器是在哪里被调用的： 让我查看这些通知器在哪里被触发： 现在让我搜索这些通知器是在什么时候被调用的： 现在让我查看具体的调用点，特别是Unit和Player中的调用： 现在让我查看Object类中的调用： 现在让我查看Map的Relocation方法： 让我查看Map的Update方法，那里应该有DelayedUnitRelocation的调用： 现在让我搜索哪里调用了Map的Update方法： 让我查看World或者MapManager中Map的Update调用： 现在让我查看MapManager的Update方法： 现在让我查看World类中哪里调用了MapManager的Update： 现在让我搜索World的Update在哪里被调用： 现在让我找一下具体的强制重新定位调用，比如SetPosition等函数调用： 基于我的分析，现在我可以给你完整的&lt;code&gt;CreatureAI::MoveInLineOfSight&lt;/code&gt;调用链路：&lt;/p&gt;&#xA;&lt;h2 id=&#34;creatureaimoveinlineofsight-调用链路分析&#34;&gt;CreatureAI::MoveInLineOfSight 调用链路分析&lt;/h2&gt;&#xA;&lt;h3 id=&#34;完整调用链路&#34;&gt;完整调用链路&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. WorldServer 主循环&#xA;   ↓&#xA;2. World::Update(diff)&#xA;   ↓&#xA;3. MapManager::Update(diff)&#xA;   ↓&#xA;4. Map::Update(diff) [对每个地图]&#xA;   ↓&#xA;5. DelayedUnitRelocation 通知器处理&#xA;   ↓&#xA;6. PlayerRelocationNotifier/CreatureRelocationNotifier::Visit()&#xA;   ↓&#xA;7. CreatureUnitRelocationWorker(Creature* c, Unit* u)&#xA;   ↓&#xA;8. CreatureAI::MoveInLineOfSight_Safe(Unit* who)&#xA;   ↓&#xA;9. CreatureAI::MoveInLineOfSight(Unit* who)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;详细分析&#34;&gt;详细分析&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-主要触发路径&#34;&gt;1. 主要触发路径&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;路径A: 定期地图更新&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;文件&lt;/strong&gt;: Main.cpp (第531行)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;WorldUpdateLoop&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    sWorld&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;Update(diff);  &lt;span style=&#34;color:#75715e&#34;&gt;// 每次世界更新循环&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;路径B: 单位强制更新可见性&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TrinityCore 如何处理怪物 Engage 玩家</title>
      <link>/posts/trinitycore-335-engage/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/posts/trinitycore-335-engage/</guid>
      <description>&lt;p&gt;分析TrinityCore-3.3.5下的代码，指出触发怪物将玩家设置为target的代码&lt;/p&gt;&#xA;&lt;p&gt;我来帮你分析TrinityCore-3.3.5代码库中触发怪物将玩家设置为target的相关代码。首先让我了解一下代码结构。 现在让我搜索与怪物目标选择相关的代码，重点关注AI和Entities目录： 让我搜索更多关于AI和目标选择的代码： 现在让我查看更具体的AI文件来了解目标选择机制： 让我搜索更多关于目标选择的函数： 现在让我查看关键的&lt;code&gt;SelectVictim&lt;/code&gt;和&lt;code&gt;EngageWithTarget&lt;/code&gt;函数： 现在让我查看&lt;code&gt;EngageWithTarget&lt;/code&gt;函数： 现在让我查看&lt;code&gt;AddThreat&lt;/code&gt;函数，这是关键的函数： 让我继续阅读这个函数的关键部分： 现在让我查看与怪物最初激活攻击相关的代码： 现在让我查看&lt;code&gt;CanStartAttack&lt;/code&gt;函数，这是决定怪物是否能开始攻击玩家的关键函数： 让我查看怪物AI更新的代码，了解怪物如何处理攻击目标： 让我查看怪物Creature类的Update方法： 现在让我查看一些常见的AI脚本，了解怪物如何选择和攻击目标： 基于我对TrinityCore 3.3.5代码的分析，我可以为你详细解释触发怪物将玩家设置为target的主要代码机制：&lt;/p&gt;&#xA;&lt;h2 id=&#34;trinitycore-335中怪物设置玩家为目标的代码分析&#34;&gt;TrinityCore 3.3.5中怪物设置玩家为目标的代码分析&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-主要触发机制&#34;&gt;1. 主要触发机制&lt;/h3&gt;&#xA;&lt;p&gt;怪物将玩家设置为攻击目标主要通过以下几个关键代码路径：&lt;/p&gt;&#xA;&lt;h4 id=&#34;a-视线检测系统-moveinlineofsight&#34;&gt;A. 视线检测系统 (&lt;code&gt;MoveInLineOfSight&lt;/code&gt;)&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: CreatureAI.cpp (第117行)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; CreatureAI&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;MoveInLineOfSight(Unit&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; who)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (me&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;IsEngaged())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (me&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;HasReactState(REACT_AGGRESSIVE) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; me&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;CanStartAttack(who, false))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        me&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;EngageWithTarget(who);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是最基本的攻击触发机制，当玩家进入怪物的视线范围内时，如果怪物是攻击性反应状态，就会尝试攻击。&lt;/p&gt;&#xA;&lt;h4 id=&#34;b-怪物能否开始攻击的判断-canstartattack&#34;&gt;B. 怪物能否开始攻击的判断 (&lt;code&gt;CanStartAttack&lt;/code&gt;)&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: Creature.cpp (第1865行)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; Creature&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;CanStartAttack(Unit &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; who, &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; force) &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (IsCivilian())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 免疫检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((IsImmuneToNPC() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;HasUnitFlag(UNIT_FLAG_PLAYER_CONTROLLED))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; (IsImmuneToPC() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;HasUnitFlag(UNIT_FLAG_PLAYER_CONTROLLED)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 不攻击非战斗宠物&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;GetTypeId() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; TYPEID_UNIT &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;GetCreatureType() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; CREATURE_TYPE_NON_COMBAT_PET)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Z轴距离检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;CanFly() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (GetDistanceZ(who) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; CREATURE_Z_ATTACK_RANGE &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; m_CombatDistance))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;force)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 目标可接受性检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;_IsTargetAcceptable(who))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 中立或距离检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (IsNeutralToAll() &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;IsWithinDistInMap(who, GetAttackDistance(who) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; m_CombatDistance))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 基本攻击能力检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;CanCreatureAttack(who, force))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 灰色怪物不主动攻击配置&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (CheckNoGrayAggroConfig(who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;GetLevelForTarget(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;), GetLevelForTarget(who)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 视线检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IsWithinLOSInMap&lt;/span&gt;(who);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-开始攻击的核心函数-engagewithtarget&#34;&gt;2. 开始攻击的核心函数 (&lt;code&gt;EngageWithTarget&lt;/code&gt;)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: Unit.cpp (第8289行)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
