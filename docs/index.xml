<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>okie dokie</title>
    <link>/</link>
    <description>Recent content on okie dokie</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TrinityCore 客户端发送位置信息的时机</title>
      <link>/posts/trinitycore-335-moveclient2server/</link>
      <pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/posts/trinitycore-335-moveclient2server/</guid>
      <description>&lt;p&gt;魔兽世界客户端会在哪些情况下同步当前位置给后端？&lt;/p&gt;&#xA;&lt;p&gt;基于我刚才对TrinityCore代码的深入分析，我来详细解答魔兽世界客户端在哪些情况下会同步位置给后端：&lt;/p&gt;&#xA;&lt;h2 id=&#34;魔兽世界客户端位置同步机制&#34;&gt;魔兽世界客户端位置同步机制&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-主要同步触发情况&#34;&gt;1. 主要同步触发情况&lt;/h3&gt;&#xA;&lt;h4 id=&#34;a-移动状态变化&#34;&gt;A. 移动状态变化&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 对应TrinityCore中的MovementFlags&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;开始移动&lt;/span&gt; (MOVEMENTFLAG_FORWARD&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;BACKWARD&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;LEFT&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;RIGHT)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;停止移动&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;改变移动方向&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;开始&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;停止跑步&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;开始&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;停止游泳&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;开始&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;停止飞行&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;b-特殊移动行为&#34;&gt;B. 特殊移动行为&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;跳跃开始和落地&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;传送&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;瞬移&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;被击退或推动&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;坐骑上下&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;变形状态改变&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;进入&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;离开载具&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;c-环境交互&#34;&gt;C. 环境交互&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;碰撞检测异常&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;地形高度变化&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;进入&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;离开水中&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;穿越地图边界&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;区域切换&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-网络包类型分析&#34;&gt;2. 网络包类型分析&lt;/h3&gt;&#xA;&lt;p&gt;基于TrinityCore的实现，客户端发送的主要位置包类型：&lt;/p&gt;&#xA;&lt;h4 id=&#34;msg_move_-系列包&#34;&gt;MSG_MOVE_* 系列包&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MSG_MOVE_START_FORWARD          &lt;span style=&#34;color:#75715e&#34;&gt;// 开始前进&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_START_BACKWARD         &lt;span style=&#34;color:#75715e&#34;&gt;// 开始后退  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_STOP                   &lt;span style=&#34;color:#75715e&#34;&gt;// 停止移动&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_START_STRAFE_LEFT      &lt;span style=&#34;color:#75715e&#34;&gt;// 开始左平移&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_START_STRAFE_RIGHT     &lt;span style=&#34;color:#75715e&#34;&gt;// 开始右平移&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_START_TURN_LEFT        &lt;span style=&#34;color:#75715e&#34;&gt;// 开始左转&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_START_TURN_RIGHT       &lt;span style=&#34;color:#75715e&#34;&gt;// 开始右转&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_JUMP                   &lt;span style=&#34;color:#75715e&#34;&gt;// 跳跃&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_FALL_LAND              &lt;span style=&#34;color:#75715e&#34;&gt;// 着陆&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;特殊移动包&#34;&gt;特殊移动包&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MSG_MOVE_SET_FACING             &lt;span style=&#34;color:#75715e&#34;&gt;// 设置面向&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_HEARTBEAT              &lt;span style=&#34;color:#75715e&#34;&gt;// 心跳包(定期位置校验)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_ROOT                   &lt;span style=&#34;color:#75715e&#34;&gt;// 定身状态&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MSG_MOVE_UNROOT                 &lt;span style=&#34;color:#75715e&#34;&gt;// 解除定身&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-同步频率和条件&#34;&gt;3. 同步频率和条件&lt;/h3&gt;&#xA;&lt;h4 id=&#34;基于trinitycore源码分析的实际机制&#34;&gt;基于TrinityCore源码分析的实际机制：&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;事件驱动同步&lt;/strong&gt;（主要方式）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 客户端只在移动状态改变时发送&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;不是每帧发送位置&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;移动开始时发送起始位置和移动标志&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;移动结束时发送最终位置&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;心跳同步&lt;/strong&gt;（辅助验证）&lt;/p&gt;</description>
    </item>
    <item>
      <title>TrinityCore 如何处理怪物 Engage 玩家：路径规划同步-新玩家加入</title>
      <link>/posts/trinitycore-335-engage-pathfindingnew/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/posts/trinitycore-335-engage-pathfindingnew/</guid>
      <description>&lt;p&gt;怪物在移动时，如果移动到原本没有怪物视野的玩家的视野内，如果让这位玩家接受到路径信息？&lt;/p&gt;&#xA;&lt;p&gt;这是一个很好的问题！当怪物移动到一个原本没有看到它的玩家视野内时，需要特殊的处理机制。让我分析一下TrinityCore是如何处理这种情况的。 现在让我查看Player的UpdateVisibilityOf函数的具体实现： 现在让我查看&lt;code&gt;SendUpdateToPlayer&lt;/code&gt;函数，这应该是发送创建包给玩家的关键函数： 现在让我查看怪物的移动更新机制，特别是与视野变化相关的部分： 让我查看Unit的BuildCreateUpdateBlockForPlayer函数： 让我直接查看Unit类的继承关系，它应该继承自Object： 现在让我查看BuildMovementUpdate函数，这应该包含移动信息： 现在让我查看关键的Spline信息写入部分： 现在让我查看当怪物进入新的Grid Cell时是如何处理的： 现在我来查看关键的&lt;code&gt;UpdateObjectVisibility&lt;/code&gt;调用： 现在让我查看WorldObject的UpdateObjectVisibility： 现在让我查看VisibleChangesNotifier： 现在我有了完整的理解！让我详细回答你的问题：&lt;/p&gt;&#xA;&lt;h2 id=&#34;怪物移动到新玩家视野内的路径信息处理机制&#34;&gt;怪物移动到新玩家视野内的路径信息处理机制&lt;/h2&gt;&#xA;&lt;h3 id=&#34;核心机制创建更新包含当前移动状态&#34;&gt;核心机制：创建更新包含当前移动状态&lt;/h3&gt;&#xA;&lt;p&gt;当怪物移动到一个原本没有看到它的玩家视野内时，TrinityCore使用一个非常聪明的机制来解决这个问题：&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-触发时机&#34;&gt;1. 触发时机&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: Map.cpp (第1290行)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;MoveAllCreaturesInMoveList()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 处理跨Grid/Cell移动的怪物&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Creature&lt;span style=&#34;color:#f92672&#34;&gt;*&amp;gt;::&lt;/span&gt;iterator itr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; _creaturesToMove.begin(); itr &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; _creaturesToMove.end(); &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;itr)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 更新怪物位置后&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        c&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;Relocate(c&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;_newPosition);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;UpdatePositionData();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 关键：更新可见性&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        c&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;UpdateObjectVisibility(false);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-可见性更新机制&#34;&gt;2. 可见性更新机制&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: Object.cpp (第3479行)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; WorldObject&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UpdateObjectVisibility(&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;/*forced*/&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 通知附近玩家可见性变化&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Trinity&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;VisibleChangesNotifier notifier(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Cell&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;VisitWorldObjects(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;, notifier, GetVisibilityRange());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-玩家视野检测&#34;&gt;3. 玩家视野检测&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: GridNotifiers.cpp (第88行)&lt;/p&gt;</description>
    </item>
    <item>
      <title>TrinityCore 如何处理怪物 Engage 玩家：路径规划同步</title>
      <link>/posts/trinitycore-335-engage-pathfinding/</link>
      <pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/posts/trinitycore-335-engage-pathfinding/</guid>
      <description>&lt;p&gt;怪物选择到合适的victim，完成了路径规划之后，是将路径信息发给客户端还是定时向附近玩家广播位置？&lt;/p&gt;&#xA;&lt;p&gt;我来帮你分析怪物在选择到victim并完成路径规划后，是如何向客户端同步位置信息的。让我搜索相关的代码。 现在让我查看Movement包的相关代码： 现在让我查看MoveSplineInit.cpp文件，这应该是发送移动包的关键代码： 现在让我看看&lt;code&gt;SendMessageToSet&lt;/code&gt;函数： 现在让我查看MessageDistDeliverer的实现： 现在让我看看定时位置更新的机制： 让我查看Unit的UpdatePosition方法： 现在让我看看Map的CreatureRelocation方法： 现在让我看看Movement相关的MotionMaster如何工作： 现在让我查看Spline移动系统，这是怪物移动的核心： 让我看一下Unit类中位置同步相关的代码： 基于我的分析，现在我可以全面回答你的问题：&lt;/p&gt;&#xA;&lt;h2 id=&#34;怪物移动同步机制分析&#34;&gt;怪物移动同步机制分析&lt;/h2&gt;&#xA;&lt;h3 id=&#34;答案发送路径信息给客户端&#34;&gt;答案：发送路径信息给客户端&lt;/h3&gt;&#xA;&lt;p&gt;怪物在选择到合适的victim并完成路径规划后，&lt;strong&gt;主要是将完整的路径信息发送给客户端&lt;/strong&gt;，而不是定时广播位置。&lt;/p&gt;&#xA;&lt;h3 id=&#34;详细机制&#34;&gt;详细机制&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-路径规划完成后的处理&#34;&gt;1. 路径规划完成后的处理&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: MoveSplineInit.cpp (第130行)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uint32 MoveSplineInit&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Launch()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 验证参数并初始化移动样条&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    move_spline.Initialize(args);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 创建SMSG_MONSTER_MOVE包&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    WorldPacket &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;(SMSG_MONSTER_MOVE, &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; unit&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;GetPackGUID();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 写入完整的移动路径信息&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    PacketBuilder&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;WriteMonsterMove(move_spline, data);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 向附近玩家广播路径包&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    unit&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;SendMessageToSet(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;data, true);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; move_spline.Duration();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-路径包的内容&#34;&gt;2. 路径包的内容&lt;/h4&gt;&#xA;&lt;p&gt;移动包包含以下信息：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;起始位置&lt;/strong&gt;: 怪物当前位置&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;路径点序列&lt;/strong&gt;: 完整的移动路径waypoints&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;移动类型&lt;/strong&gt;: 走路/跑步/飞行等&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;移动速度&lt;/strong&gt;: 移动速度参数&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;面向信息&lt;/strong&gt;: 面向目标、角度或位置&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;移动标志&lt;/strong&gt;: 特殊移动状态&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;3-客户端预测机制&#34;&gt;3. 客户端预测机制&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Unit&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;UpdateSplinePosition()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 服务器端根据样条曲线计算当前位置&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    Movement&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Location loc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; movespline&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;ComputePosition();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 更新服务器端位置&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    UpdatePosition(loc.x, loc.y, loc.z, loc.orientation);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;工作原理&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>TrinityCore 如何处理怪物 Engage 玩家：CreatureAI::MoveInLineOfSight的调用链路</title>
      <link>/posts/trinitycore-335-engage-moveinlineofsight/</link>
      <pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/posts/trinitycore-335-engage-moveinlineofsight/</guid>
      <description>&lt;p&gt;指出CreatureAI::MoveInLineOfSight的调用链路&lt;/p&gt;&#xA;&lt;p&gt;我来帮你分析&lt;code&gt;CreatureAI::MoveInLineOfSight&lt;/code&gt;的调用链路。让我搜索相关的调用代码。 现在让我查看Grid通知机制，这是&lt;code&gt;MoveInLineOfSight&lt;/code&gt;被调用的关键地方： 现在让我查看&lt;code&gt;CreatureUnitRelocationWorker&lt;/code&gt;函数： 现在让我查看这些Grid通知器是在哪里被调用的： 让我查看这些通知器在哪里被触发： 现在让我搜索这些通知器是在什么时候被调用的： 现在让我查看具体的调用点，特别是Unit和Player中的调用： 现在让我查看Object类中的调用： 现在让我查看Map的Relocation方法： 让我查看Map的Update方法，那里应该有DelayedUnitRelocation的调用： 现在让我搜索哪里调用了Map的Update方法： 让我查看World或者MapManager中Map的Update调用： 现在让我查看MapManager的Update方法： 现在让我查看World类中哪里调用了MapManager的Update： 现在让我搜索World的Update在哪里被调用： 现在让我找一下具体的强制重新定位调用，比如SetPosition等函数调用： 基于我的分析，现在我可以给你完整的&lt;code&gt;CreatureAI::MoveInLineOfSight&lt;/code&gt;调用链路：&lt;/p&gt;&#xA;&lt;h2 id=&#34;creatureaimoveinlineofsight-调用链路分析&#34;&gt;CreatureAI::MoveInLineOfSight 调用链路分析&lt;/h2&gt;&#xA;&lt;h3 id=&#34;完整调用链路&#34;&gt;完整调用链路&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. WorldServer 主循环&#xA;   ↓&#xA;2. World::Update(diff)&#xA;   ↓&#xA;3. MapManager::Update(diff)&#xA;   ↓&#xA;4. Map::Update(diff) [对每个地图]&#xA;   ↓&#xA;5. DelayedUnitRelocation 通知器处理&#xA;   ↓&#xA;6. PlayerRelocationNotifier/CreatureRelocationNotifier::Visit()&#xA;   ↓&#xA;7. CreatureUnitRelocationWorker(Creature* c, Unit* u)&#xA;   ↓&#xA;8. CreatureAI::MoveInLineOfSight_Safe(Unit* who)&#xA;   ↓&#xA;9. CreatureAI::MoveInLineOfSight(Unit* who)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;详细分析&#34;&gt;详细分析&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-主要触发路径&#34;&gt;1. 主要触发路径&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;路径A: 定期地图更新&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;文件&lt;/strong&gt;: Main.cpp (第531行)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;WorldUpdateLoop&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    sWorld&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;Update(diff);  &lt;span style=&#34;color:#75715e&#34;&gt;// 每次世界更新循环&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;路径B: 单位强制更新可见性&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TrinityCore 如何处理怪物 Engage 玩家</title>
      <link>/posts/trinitycore-335-engage/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/posts/trinitycore-335-engage/</guid>
      <description>&lt;p&gt;分析TrinityCore-3.3.5下的代码，指出触发怪物将玩家设置为target的代码&lt;/p&gt;&#xA;&lt;p&gt;我来帮你分析TrinityCore-3.3.5代码库中触发怪物将玩家设置为target的相关代码。首先让我了解一下代码结构。 现在让我搜索与怪物目标选择相关的代码，重点关注AI和Entities目录： 让我搜索更多关于AI和目标选择的代码： 现在让我查看更具体的AI文件来了解目标选择机制： 让我搜索更多关于目标选择的函数： 现在让我查看关键的&lt;code&gt;SelectVictim&lt;/code&gt;和&lt;code&gt;EngageWithTarget&lt;/code&gt;函数： 现在让我查看&lt;code&gt;EngageWithTarget&lt;/code&gt;函数： 现在让我查看&lt;code&gt;AddThreat&lt;/code&gt;函数，这是关键的函数： 让我继续阅读这个函数的关键部分： 现在让我查看与怪物最初激活攻击相关的代码： 现在让我查看&lt;code&gt;CanStartAttack&lt;/code&gt;函数，这是决定怪物是否能开始攻击玩家的关键函数： 让我查看怪物AI更新的代码，了解怪物如何处理攻击目标： 让我查看怪物Creature类的Update方法： 现在让我查看一些常见的AI脚本，了解怪物如何选择和攻击目标： 基于我对TrinityCore 3.3.5代码的分析，我可以为你详细解释触发怪物将玩家设置为target的主要代码机制：&lt;/p&gt;&#xA;&lt;h2 id=&#34;trinitycore-335中怪物设置玩家为目标的代码分析&#34;&gt;TrinityCore 3.3.5中怪物设置玩家为目标的代码分析&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-主要触发机制&#34;&gt;1. 主要触发机制&lt;/h3&gt;&#xA;&lt;p&gt;怪物将玩家设置为攻击目标主要通过以下几个关键代码路径：&lt;/p&gt;&#xA;&lt;h4 id=&#34;a-视线检测系统-moveinlineofsight&#34;&gt;A. 视线检测系统 (&lt;code&gt;MoveInLineOfSight&lt;/code&gt;)&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: CreatureAI.cpp (第117行)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; CreatureAI&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;MoveInLineOfSight(Unit&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; who)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (me&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;IsEngaged())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (me&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;HasReactState(REACT_AGGRESSIVE) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; me&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;CanStartAttack(who, false))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        me&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;EngageWithTarget(who);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是最基本的攻击触发机制，当玩家进入怪物的视线范围内时，如果怪物是攻击性反应状态，就会尝试攻击。&lt;/p&gt;&#xA;&lt;h4 id=&#34;b-怪物能否开始攻击的判断-canstartattack&#34;&gt;B. 怪物能否开始攻击的判断 (&lt;code&gt;CanStartAttack&lt;/code&gt;)&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: Creature.cpp (第1865行)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; Creature&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;CanStartAttack(Unit &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; who, &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; force) &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (IsCivilian())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 免疫检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((IsImmuneToNPC() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;HasUnitFlag(UNIT_FLAG_PLAYER_CONTROLLED))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; (IsImmuneToPC() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;HasUnitFlag(UNIT_FLAG_PLAYER_CONTROLLED)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 不攻击非战斗宠物&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;GetTypeId() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; TYPEID_UNIT &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;GetCreatureType() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; CREATURE_TYPE_NON_COMBAT_PET)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Z轴距离检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;CanFly() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (GetDistanceZ(who) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; CREATURE_Z_ATTACK_RANGE &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; m_CombatDistance))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;force)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 目标可接受性检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;_IsTargetAcceptable(who))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 中立或距离检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (IsNeutralToAll() &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;IsWithinDistInMap(who, GetAttackDistance(who) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; m_CombatDistance))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 基本攻击能力检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;CanCreatureAttack(who, force))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 灰色怪物不主动攻击配置&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (CheckNoGrayAggroConfig(who&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;GetLevelForTarget(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;), GetLevelForTarget(who)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 视线检查&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IsWithinLOSInMap&lt;/span&gt;(who);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-开始攻击的核心函数-engagewithtarget&#34;&gt;2. 开始攻击的核心函数 (&lt;code&gt;EngageWithTarget&lt;/code&gt;)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;: Unit.cpp (第8289行)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
